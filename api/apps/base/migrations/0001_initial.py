# Generated by Django 4.1 on 2022-09-03 21:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeIni', models.DateTimeField(auto_now_add=True, verbose_name='Hora de inicio de la pregunta')),
                ('timeFin', models.DateTimeField(null=True, verbose_name='Hora de finalización de la pregunta')),
                ('acierto', models.BooleanField(null=True, verbose_name='Es acierto')),
            ],
            options={
                'verbose_name': 'Respuesta individual',
                'verbose_name_plural': 'Respuestas individuales',
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('fechaInicio', models.DateTimeField(verbose_name='Fecha de inicio del evento')),
                ('finFase1', models.DateTimeField(verbose_name='Fin de la fase de creación de pregunta')),
                ('finFase2', models.DateTimeField(verbose_name='Fin de la fase de cuestionarios')),
                ('finFase3', models.DateTimeField(verbose_name='Fin de la fase de reportar')),
                ('idioma', models.SmallIntegerField(choices=[(1, 'Esp'), (2, 'Ing')], default=1, verbose_name='Idioma')),
                ('terminada', models.BooleanField(default=False, verbose_name='Evento terminado')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.CreateModel(
            name='Imagen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.ImageField(unique=True, upload_to='img/', verbose_name='Imagen Pregunta')),
            ],
            options={
                'verbose_name': 'Imagen',
                'verbose_name_plural': 'Imágenes',
            },
        ),
        migrations.CreateModel(
            name='Partida',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('modoJuego', models.SmallIntegerField(choices=[(1, 'Repaso'), (2, 'Evento'), (3, 'Duelo')], verbose_name='Modo de juego')),
                ('idioma', models.SmallIntegerField(choices=[(1, 'Esp'), (2, 'Ing')], default=1, verbose_name='Idioma')),
                ('inicio', models.DateTimeField(auto_now_add=True, verbose_name='Inicio de la partida')),
            ],
            options={
                'verbose_name': 'Partida',
                'verbose_name_plural': 'Partidas',
            },
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, unique=True, verbose_name='Nombre del tema')),
            ],
            options={
                'verbose_name': 'Tema',
                'verbose_name_plural': 'Temas',
            },
        ),
        migrations.CreateModel(
            name='UserComp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_f1', models.PositiveIntegerField(default=0, verbose_name='Puntuación de la fase de creación de pregunta')),
                ('score_f2', models.PositiveIntegerField(default=0, verbose_name='Puntuación de la fase de cuestionario')),
                ('score_f3', models.PositiveIntegerField(default=0, verbose_name='Puntuación de la fase de reportar')),
                ('valoracion', models.SmallIntegerField(null=True, verbose_name='Valoración')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.evento', verbose_name='Evento')),
                ('partida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.partida', verbose_name='Partida')),
            ],
            options={
                'verbose_name': 'Participación en evento',
                'verbose_name_plural': 'Participaciones en eventos',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('motivo', models.SmallIntegerField(choices=[(1, 'Incorrecto'), (2, 'Ofensivo'), (3, 'Otro Motivo')], verbose_name='Motivo')),
                ('descripcion', models.CharField(max_length=400, verbose_name='Descripción')),
                ('estado', models.SmallIntegerField(choices=[(1, 'Pendiente'), (2, 'Validado'), (3, 'Invalidado')], default=1, verbose_name='Estado')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.answerlogs', verbose_name='Log')),
            ],
            options={
                'verbose_name': 'Pregunta reportada',
                'verbose_name_plural': 'Preguntas reportadas',
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('enunciado', models.CharField(max_length=400, verbose_name='Enunciado')),
                ('estado', models.SmallIntegerField(choices=[(1, 'En evento'), (2, 'Sin eliminar'), (3, 'eliminada')], default=1, verbose_name='Estado')),
                ('idioma', models.SmallIntegerField(choices=[(1, 'Esp'), (2, 'Ing')], default=1, verbose_name='Idioma')),
                ('creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creador de la pregunta')),
                ('evento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.evento', verbose_name='Evento en el que fue creada')),
                ('imagen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.imagen', verbose_name='Imagen')),
                ('tema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.tema', verbose_name='Tema')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
            },
        ),
        migrations.AddField(
            model_name='partida',
            name='preguntas',
            field=models.ManyToManyField(through='base.AnswerLogs', to='base.pregunta'),
        ),
        migrations.AddField(
            model_name='partida',
            name='tema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.tema', verbose_name='Tema'),
        ),
        migrations.AddField(
            model_name='partida',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.CreateModel(
            name='Opcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=400, verbose_name='Texto')),
                ('esCorrecta', models.BooleanField(verbose_name='Es correcta')),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opciones', to='base.pregunta', verbose_name='Pregunta')),
            ],
            options={
                'verbose_name': 'Opción',
                'verbose_name_plural': 'Opciones',
            },
        ),
        migrations.AddField(
            model_name='imagen',
            name='tema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.tema', verbose_name='Tema'),
        ),
        migrations.AddField(
            model_name='evento',
            name='tema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.tema', verbose_name='Tema'),
        ),
        migrations.CreateModel(
            name='Duelos',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('estado', models.SmallIntegerField(choices=[(1, 'Pendiente'), (2, 'Finalizada'), (3, 'Rechazada')], default=1, verbose_name='Estado')),
                ('partidaUser1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Partida_retador', to='base.partida', verbose_name='Partida del retador')),
                ('partidaUser2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Partida_retado', to='base.partida', verbose_name='Partida del retado')),
            ],
            options={
                'verbose_name': 'Duelo',
                'verbose_name_plural': 'Duelos',
            },
        ),
        migrations.AddField(
            model_name='answerlogs',
            name='partida',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.partida', verbose_name='Partida'),
        ),
        migrations.AddField(
            model_name='answerlogs',
            name='pregunta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.pregunta', verbose_name='Pregunta'),
        ),
        migrations.AddField(
            model_name='answerlogs',
            name='respuesta_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.opcion', verbose_name='Respuesta del usuario'),
        ),
        migrations.CreateModel(
            name='MejoresValoradas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.evento', verbose_name='Evento')),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.pregunta', verbose_name='Pregunta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Pregunta mejor valorada',
                'verbose_name_plural': 'Preguntas mejor valoradas',
                'unique_together': {('evento', 'usuario')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='answerlogs',
            unique_together={('partida', 'pregunta')},
        ),
    ]
